/*
 * Copyright 2017 Banco Bilbao Vizcaya Argentaria, S.A.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        maven {
            url 'http://repo.jenkins-ci.org/releases/'
        }
    }

    dependencies {
        classpath 'net.linguica.gradle:maven-settings-plugin:0.5'
        classpath 'org.jenkins-ci.tools:gradle-jpi-plugin:0.28.1'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
    }
}

apply plugin: 'jpi'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: "com.github.ben-manes.versions"

sourceCompatibility = 1.8

def isReleaseVersion = !version.endsWith("SNAPSHOT")
def user = hasProperty('mavenUser') ? mavenUser : System.getenv('mavenUser')
def password = hasProperty('mavenPassword') ? mavenPassword : System.getenv('mavenPassword')

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://plugins.gradle.org/m2/'
    }
    maven {
        url 'http://repo.jenkins-ci.org/releases/'
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/reports/coverage")
    }
}

jenkinsPlugin {
    coreVersion = '2.160'
    shortName = pluginName
    displayName = jenkinsDisplayName
}

configurations.archives.artifacts.clear()
artifacts {
    archives file: project.file("build/libs/mirrorgate-publisher.hpi")
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: user, password: password)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: user, password: password)
            }

            pom.project {
                name pluginName
                artifactId pluginName
                packaging 'hpi'
                description 'WallBoard application meant to give teams fast feedback in all the different areas related to software development.'

                url 'https://github.com/bbva/mirrorgate-jenkins-builds-collector'

                scm {
                    url 'https://github.com/bbva/mirrorgate-jenkins-builds-collector'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'mirrorgate'
                        name 'mirrorgate.group@bbva.com'
                    }
                }
            }
        }
    }
}

task replaceVersionInREADME {
    ant.replaceregexp(match:'Last version of this plugin \\(v([0-9\\.]+(-SNAPSHOT)?)\\)', replace:"Last version of this plugin (v$version)", flags:'g', byline:true) {
        fileset(dir: '.', includes: 'README.md')
    }

    ant.replaceregexp(match:'Jenkins version ([0-9\\.]+)', replace:"Jenkins version ${jenkinsPlugin.coreVersion}", flags:'g', byline:true) {
        fileset(dir: '.', includes: 'README.md')
    }
}

defaultTasks 'clean', 'jpi'

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    compile 'org.apache.commons:commons-lang3:3.8.1'

    jenkinsPlugins 'org.jenkins-ci.plugins:apache-httpcomponents-client-4-api:4.5.5-3.0'
    jenkinsPlugins 'org.jenkins-ci.plugins:credentials:2.1.18'
    jenkinsPlugins 'org.jenkins-ci.plugins:plain-credentials:1.5'

    testCompile 'org.powermock:powermock-mockito-release-full:1.6.4'
}
